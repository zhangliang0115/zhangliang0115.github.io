import{_ as o,r as i,o as r,c as p,b as a,d as n,e as s,a as t}from"./app-b6485265.js";const c={},l=a("h1",{id:"spring-boot-学习笔记",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#spring-boot-学习笔记","aria-hidden":"true"},"#"),n(" spring-boot 学习笔记")],-1),d=a("h2",{id:"jsr-规范",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#jsr-规范","aria-hidden":"true"},"#"),n(" jsr 规范")],-1),h={href:"https://blog.csdn.net/hffyfdt/article/details/83889250",target:"_blank",rel:"noopener noreferrer"},u=a("h2",{id:"idea-远程调试-jar运行-remote",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#idea-远程调试-jar运行-remote","aria-hidden":"true"},"#"),n(" idea 远程调试 jar运行 remote")],-1),m={href:"https://coding.imooc.com/lesson/252.html#mid=16162",target:"_blank",rel:"noopener noreferrer"},g=a("h2",{id:"处理前端合并请求思路-dive-in-spring-boot-springboot-rest",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#处理前端合并请求思路-dive-in-spring-boot-springboot-rest","aria-hidden":"true"},"#"),n(" 处理前端合并请求思路 dive-in-spring-boot>springboot-rest")],-1),b={href:"https://coding.imooc.com/lesson/252.html#mid=17090",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="spring-reactive》paralleldataloader-并行计算" tabindex="-1"><a class="header-anchor" href="#spring-reactive》paralleldataloader-并行计算" aria-hidden="true">#</a> spring-reactive》ParallelDataLoader 并行计算</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span>*newFixedThreadPool<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">*</span><span class="token comment">// 创建线程池*</span>
<span class="token class-name">CompletionService</span> completionService <span class="token operator">=</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">new</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token class-name">ExecutorCompletionService</span><span class="token punctuation">(</span>executorService<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h5><h2 id="spring-boot-配置外部静态资源目录" tabindex="-1"><a class="header-anchor" href="#spring-boot-配置外部静态资源目录" aria-hidden="true">#</a> spring-boot 配置外部静态资源目录</h2><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.resources.static-locations</span><span class="token punctuation">=</span><span class="token value attr-value">file:static/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="获得发布后的jar当前路径" tabindex="-1"><a class="header-anchor" href="#获得发布后的jar当前路径" aria-hidden="true">#</a> 获得发布后的jar当前路径</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getJarRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">ApplicationHome</span> home <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationHome</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">File</span> jarFile <span class="token operator">=</span> home<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> jarFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spring-boot-上传图片到本地及读取本地图片问题" tabindex="-1"><a class="header-anchor" href="#spring-boot-上传图片到本地及读取本地图片问题" aria-hidden="true">#</a> spring-boot 上传图片到本地及读取本地图片问题</h2>`,8),f={href:"https://blog.csdn.net/qq_38762237/article/details/81282444",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        		   		registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/imgs/**&quot;</span><span class="token punctuation">)</span>
     <span class="token comment">//.addResourceLocations(&quot;file:F:/temp_img/&quot;);</span>
     <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;file:&quot;</span><span class="token operator">+</span><span class="token function">getJarRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/upload/&quot;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-hidden="true">#</a></h2><h2 id="项目框架设计思路" tabindex="-1"><a class="header-anchor" href="#项目框架设计思路" aria-hidden="true">#</a> 项目框架设计思路</h2><h3 id="spring-boot-smart" tabindex="-1"><a class="header-anchor" href="#spring-boot-smart" aria-hidden="true">#</a> spring-boot-smart</h3><h6 id="服务-docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#服务-docker-compose-yml" aria-hidden="true">#</a> 服务 docker-compose.yml</h6><p>nacos-server、sentinel</p><h6 id="spring-boot-smart-core" tabindex="-1"><a class="header-anchor" href="#spring-boot-smart-core" aria-hidden="true">#</a> spring-boot-smart-core</h6><ul><li>spring-boot-smart-regist (注册中心)</li><li>spring-boot-smart-config （配置中心）</li><li>spring-boot-smart-gateway （网关）</li><li>spring-boot-smart-sentinel （限流）</li><li>spring-boot-smart-cache （缓存）</li><li>spring-boot-smart-services (服务) <ul><li>spring-boot-smart-api</li></ul></li><li>spring-boot-smart-modules (模块) <ul><li>角色、账户、资源、权限</li></ul></li></ul><h1 id="学习笔记" tabindex="-1"><a class="header-anchor" href="#学习笔记" aria-hidden="true">#</a> 学习笔记</h1><p>Mybatis-plus 插件</p>`,10),_={href:"https://mybatis.plus/",target:"_blank",rel:"noopener noreferrer"},x=t('<p>视频地址</p><p>https://www.imooc.com/learn/1130</p><p>spring-cloud-alibaba</p><p>https://gitee.com/log4j/pig</p><p>https://www.bilibili.com/video/av45084065</p><p>https://gitee.com/log4j</p><p>https://my.oschina.net/giegie</p><p>nacos 注册中心</p><p>http://blog.didispace.com/open-nacos-server-1-0-0/</p><p>http://nacos.didispace.com/nacos/index.html</p><p>nacos.didispace.com:80</p><hr><p>105：bootstrapServiceContext</p><p><img src="" alt="学习笔记-微服务架构"><img src="" alt="学习笔记-sca"></p><p>spring-boot 使用 嵌入式数据库 derby</p><p>https://blog.csdn.net/waltzlxc/article/details/73648125</p><h1 id="java中如何使用嵌入mysql" tabindex="-1"><a class="header-anchor" href="#java中如何使用嵌入mysql" aria-hidden="true">#</a> Java中如何使用嵌入MySQL</h1><p>https://blog.csdn.net/u013339787/article/details/53506016</p>',18),w={id:"阿里sentinel支持spring-cloud-gateway啦",tabindex:"-1"},y=a("a",{class:"header-anchor",href:"#阿里sentinel支持spring-cloud-gateway啦","aria-hidden":"true"},"#",-1),j={href:"https://www.cnblogs.com/yinjihuan/p/10772558.html",target:"_blank",rel:"noopener noreferrer"},S=t('<p>https://www.cnblogs.com/yinjihuan/p/10772558.html</p><p>Blink 实时计算</p><p>https://www.jianshu.com/p/37a6acfc3124</p><p>https://m.aliyun.com/yunqi/articles/57232</p><h1 id="阿里sentinel支持spring-cloud-gateway啦-1" tabindex="-1"><a class="header-anchor" href="#阿里sentinel支持spring-cloud-gateway啦-1" aria-hidden="true">#</a> 阿里Sentinel支持Spring Cloud Gateway啦</h1><p>https://blog.csdn.net/u013322876/article/details/89635577</p><p>https://blog.csdn.net/forezp/article/details/83792388</p><p>公众号：方志明</p><p>https://blog.csdn.net/forezp/article/details/83792388</p><p>Spring Cloud Gateway 配置大全</p><p>https://blog.csdn.net/weiwoyonzhe/article/details/88686480</p><p>https://github.com/zhuzhong/gateway-dubbox</p><p>https://www.bilibili.com/video/av46423549/?p=2</p><p>https://www.funtl.com</p><p>https://github.com/funtl</p><p>smart-cloud 基础框架结构</p><p>smart-cloud-parent</p><p>​ smart-cloud-dependencies 项目依赖</p><p>​ smart-cloud-core 项目核心功能</p><p>​ smart-cloud-starter 项目启动</p><p>​ smart-cloud-example 示例项目</p><h1 id="springapplication-入口" tabindex="-1"><a class="header-anchor" href="#springapplication-入口" aria-hidden="true">#</a> SpringApplication 入口</h1><h2 id="_1、事件监听" tabindex="-1"><a class="header-anchor" href="#_1、事件监听" aria-hidden="true">#</a> 1、事件监听</h2><h3 id="_1-1、实现-applicationlistener" tabindex="-1"><a class="header-anchor" href="#_1-1、实现-applicationlistener" aria-hidden="true">#</a> 1.1、实现 ApplicationListener</h3><p>​ onApplicationEvent</p><h3 id="_1-2、meta-inf-spring-factories" tabindex="-1"><a class="header-anchor" href="#_1-2、meta-inf-spring-factories" aria-hidden="true">#</a> 1.2、META-INF/spring.factories</h3><p>​ org.springframework.context.ApplicationListener=\\</p><h3 id="_1-3、指定执行顺序" tabindex="-1"><a class="header-anchor" href="#_1-3、指定执行顺序" aria-hidden="true">#</a> 1.3、指定执行顺序</h3><h4 id="_1-3-1、注解方式" tabindex="-1"><a class="header-anchor" href="#_1-3-1、注解方式" aria-hidden="true">#</a> 1.3.1、注解方式</h4><p>​ org.springframework.core.annotation.Order</p><h4 id="_1-3-2、实现接口" tabindex="-1"><a class="header-anchor" href="#_1-3-2、实现接口" aria-hidden="true">#</a> 1.3.2、实现接口</h4><p>​ org.springframework.core.Ordered#getOrder</p><h2 id="_2、启动完成后执行" tabindex="-1"><a class="header-anchor" href="#_2、启动完成后执行" aria-hidden="true">#</a> 2、启动完成后执行</h2><h3 id="_2-1、applicationrunner" tabindex="-1"><a class="header-anchor" href="#_2-1、applicationrunner" aria-hidden="true">#</a> 2.1、ApplicationRunner</h3><h3 id="_2-2、commandlinerunner" tabindex="-1"><a class="header-anchor" href="#_2-2、commandlinerunner" aria-hidden="true">#</a> 2.2、CommandLineRunner</h3><h4 id="线程上下文拷贝" tabindex="-1"><a class="header-anchor" href="#线程上下文拷贝" aria-hidden="true">#</a> 线程上下文拷贝</h4><p>https://time.geekbang.org/course/detail/204-109712</p><h4 id="openfeign" tabindex="-1"><a class="header-anchor" href="#openfeign" aria-hidden="true">#</a> openfeign</h4><p>https://www.jdon.com/50638</p><p>https://www.jianshu.com/p/8376d709d972</p>',40);function q(R,C){const e=i("ExternalLinkIcon");return r(),p("div",null,[l,d,a("p",null,[a("a",h,[n("https://blog.csdn.net/hffyfdt/article/details/83889250"),s(e)])]),u,a("p",null,[a("a",m,[n("https://coding.imooc.com/lesson/252.html#mid=16162"),s(e)])]),g,a("p",null,[a("a",b,[n("https://coding.imooc.com/lesson/252.html#mid=17090"),s(e)]),n(" and(+1)")]),k,a("p",null,[a("a",f,[n("https://blog.csdn.net/qq_38762237/article/details/81282444"),s(e)])]),v,a("p",null,[a("a",_,[n("https://mybatis.plus"),s(e)])]),x,a("h1",w,[y,n(),a("a",j,[n("阿里Sentinel支持Spring Cloud Gateway啦"),s(e)])]),S])}const A=o(c,[["render",q],["__file","index.html.vue"]]);export{A as default};
